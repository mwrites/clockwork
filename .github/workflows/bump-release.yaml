name: Bump and Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'New version'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
          - rc
          - beta
          - alpha
      extra_args:
        description: 'Extra args to pass to bump-version.sh, e.g: --dry-run.'
        required: false
        default: '--exclude clockwork-thread-program-v1'

env:
  CARGO_TERM_COLOR: always
  ANCHOR_VERSION: v0.27.0

jobs:
  bump:
    runs-on: ubuntu-latest
    name: Bump version and release
    steps:
      - uses: actions/checkout@v3 

      # - name: Install Rust Stable to use with tools
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     override: true
      #     toolchain: stable
      #     profile: minimal

      # - name: Install cargo-edit
      #   uses: baptiste0928/cargo-install@v2
      #   with:
      #     crate: cargo-edit
      #     version: "0.11.9"

      # - name: Run version bump script
      #   run: |
      #     cd ${{ github.workspace }}
      #     source ./scripts/ci/bump-version.sh ${{ github.event.inputs.bump }} ${{ github.event.inputs.extra_args }}
      #     # echo "OLD_VERSION=$old_version" >> old_version.txt
      #     # echo "NEW_VERSION=$new_version" >> new_version.txt
      #     # echo "CI_TAG=v$new_version" >> "$GITHUB_ENV
      #     # echo "OLD_VERSION=$old_version" >> $GITHUB_ENV
      #     # echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
      #     # echo "CI_TAG=v$new_version" >> "$GITHUB_ENV" 
      #   env:
      #     RUST_BACKTRACE: full

      - name: Upload source with bumped version
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: bumped_source
          path: ${{ github.workspace }}

  release:
    needs:
      - bump
    runs-on: '${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3 

      - name: Install core deps for mac if needed
        if: startsWith(matrix.os, 'mac')
        run: |
          env HOMEBREW_NO_AUTO_UPDATE=1 brew install jq
      - name: Install core deps
        if: startsWith(matrix.os, 'ubuntu')
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: jq

      - name: Env variables
        run: |
          echo "CI_TAG=$(cat VERSION)" >> $GITHUB_ENV
          SOLANA_VERSION="$(./scripts/ci/solana-version.sh)"
          SOLANA_VERSION="v${SOLANA_VERSION#=}"
          echo "SOLANA_VERSION=$SOLANA_VERSION" >> "$GITHUB_ENV"

      - name: Install Rust Stable to use with tools
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
     
      - uses: ./.github/actions/setup-solana/

      # - name: Install Anchor
      #   run: |
      #     cargo install --git https://github.com/coral-xyz/anchor --tag ${{ env.ANCHOR_VERSION }} anchor-cli --locked
      #     anchor --version
      #     rustup toolchain list

      - name: Install anchor
        uses: baptiste0928/cargo-install@v2
        with:
          crate: anchor-cli
          args: --git https://github.com/coral-xyz/anchor --tag ${{ env.ANCHOR_VERSION }}
      - name: Fix Anchor Path
        run: |
          mv ~/.cargo-install/anchor-cli/bin/* ~/.cargo/bin/
          ls ~/.cargo/bin
          anchor --version

      - run: |
          echo "~/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          export PATH=~/.local/share/solana/install/active_release/bin:$PATH
          cargo-build-bpf -V
        shell: bash

      - uses: actions/download-artifact@v3
      - run: cd bumped_source

      - name: Install Rust ${{ env.PLUGIN_RUST_VERSION }}
        uses: ./.github/actions/setup-rust/

      - name: Grant permissions to create-tarball.sh
        run: chmod +x ./scripts/ci/create-tarball.sh

      - name: Grant permissions to build-all.sh
        run: chmod +x ./scripts/build-all.sh

      # - name: Commit and tag
      #   uses: EndBug/add-and-commit@v9
      #   with:
      #     message: Bump from ${{ env.OLD_VERSION }} to ${{ env.NEW_VERSION }}
      #     tag: v${{ env.NEW_VERSION }}

      - name: Build release tarball
        run: ./scripts/ci/create-tarball.sh

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.CI_TAG }}
          tag_name: ${{ env.CI_TAG }}
          body: |
            clockwork-geyser-plugin ${{ env.CI_TAG }}
            solana ${{ env.SOLANA_VERSION }}
            rust ${{ env.PLUGIN_RUST_VERSION }}
          files: |
            clockwork-geyser-plugin-release-*

      # - name: Install cargo-publish-workspace-v2
      #   uses: baptiste0928/cargo-install@v2
      #   with:
      #     crate: cargo-publish-workspace-v2

      # - name: Publish to crates.io
      #   env:
      #     CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      #   run: cargo publish-workspace --crate-prefix clockwork
