name: Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'New version'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
          - rc
          - beta
          - alpha
      extra_args:
        description: 'Extra args to pass to bump-version.sh, e.g: --dry-run.'
        required: false
        default: '--exclude clockwork-thread-program-v1'

env:
  CARGO_TERM_COLOR: always

jobs:
  bump-release:
    runs-on: ubuntu-latest
    name: Bump version and release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: jq

      - name: Set env vars
        run: |
          source scripts/ci/rust-version.sh
          echo "PLUGIN_RUST_VERSION=$rust_stable" | tee -a $GITHUB_ENV

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.PLUGIN_RUST_VERSION }}
          override: true
          profile: minimal
          components: rustfmt

      - name: Install cargo-edit
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-edit
          version: "0.11.9"
      
      - name: Install anchor
        uses: baptiste0928/cargo-install@v2
        with:
          crate: anchor-cli
          args: --git https://github.com/coral-xyz/anchor --tag v0.27.0

      - name: Run version bump script
        run: |
          cd ${{ github.workspace }}
          source ./scripts/ci/bump-version.sh ${{ github.event.inputs.bump }} ${{ github.event.inputs.extra_args }}
          echo "OLD_VERSION=$old_version" >> $GITHUB_ENV
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
          echo "CI_TAG=v${{ $new_version }}" >> "$GITHUB_ENV" 
        env:
          RUST_BACKTRACE: full

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Build
        run: cargo build --release --locked

      - name: Grant permissions to create-tarball.sh
        run: chmod +x ./scripts/ci/create-tarball.sh

      - name: Grant permissions to build-all.sh
        run: chmod +x ./scripts/build-all.sh

      # - name: Commit and tag
      #   uses: EndBug/add-and-commit@v9
      #   with:
      #     message: Bump from ${{ env.OLD_VERSION }} to ${{ env.NEW_VERSION }}
      #     tag: v${{ env.NEW_VERSION }}

      - name: Build release tarball for linux
        run: ./scripts/ci/create-tarball.sh x86_64-unknown-linux-gnu

      - name: Build release tarball for x86_64-apple-darwin
        run: ./scripts/ci/create-tarball.sh x86_64-apple-darwin

      - name: Build release tarball for aarch64-apple-darwin
        run: ./scripts/ci/create-tarball.sh aarch64-apple-darwin

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.CI_TAG }}
          tag_name: ${{ env.CI_TAG }}
          body: |
            clockwork-geyser-plugin ${{ env.CI_TAG }}
            solana ${{ env.SOLANA_VERSION }}
            rust ${{ env.PLUGIN_RUST_VERSION }}
          files: |
            clockwork-geyser-plugin-release-*

      # - name: Install cargo-publish-workspace-v2
      #   uses: baptiste0928/cargo-install@v2
      #   with:
      #     crate: cargo-publish-workspace-v2

      # - name: Publish to crates.io
      #   env:
      #     CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      #   run: cargo publish-workspace --crate-prefix clockwork
